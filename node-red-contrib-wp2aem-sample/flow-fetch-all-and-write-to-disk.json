[
    {
        "id": "79da2ecb.7de1b",
        "type": "tab",
        "label": "Fetch All and Write to Disk",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8719ccd7.eb3e",
        "type": "inject",
        "z": "79da2ecb.7de1b",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 60,
        "wires": [
            [
                "e6da57e9.8b80f8"
            ]
        ]
    },
    {
        "id": "e6da57e9.8b80f8",
        "type": "http request",
        "z": "79da2ecb.7de1b",
        "name": "Fetch Post",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://unit42.paloaltonetworks.com/wp-json/wp/v2/posts",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 300,
        "y": 60,
        "wires": [
            [
                "3619ec6.4108a14"
            ]
        ]
    },
    {
        "id": "3619ec6.4108a14",
        "type": "function",
        "z": "79da2ecb.7de1b",
        "name": "Get Paginated Post URLs",
        "func": "let paginatedUrls = []\n//for (let i = 2; i <= msg.headers['x-wp-totalpages']; i++) {   \nfor (let i = 2; i <= 2; i++) {   \n  let paginationUrl = `${msg.responseUrl}?page=${i}`     \n  paginatedUrls.push(paginationUrl)\n  console.log(paginationUrl)\n}\nmsg.payload = paginatedUrls\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 160,
        "wires": [
            [
                "2b6ebb72.581294"
            ]
        ]
    },
    {
        "id": "90ceaceb.595f8",
        "type": "http request",
        "z": "79da2ecb.7de1b",
        "name": "Request paginated results",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 860,
        "y": 160,
        "wires": [
            [
                "f8812a2c.91f8b8"
            ]
        ]
    },
    {
        "id": "2b6ebb72.581294",
        "type": "split",
        "z": "79da2ecb.7de1b",
        "name": "Split on paginated URLs",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 410,
        "y": 160,
        "wires": [
            [
                "c5aadafc.4f7698"
            ]
        ]
    },
    {
        "id": "c5aadafc.4f7698",
        "type": "change",
        "z": "79da2ecb.7de1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 160,
        "wires": [
            [
                "90ceaceb.595f8"
            ]
        ]
    },
    {
        "id": "f8812a2c.91f8b8",
        "type": "json",
        "z": "79da2ecb.7de1b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1050,
        "y": 160,
        "wires": [
            [
                "ecbd39a3.40f278"
            ]
        ]
    },
    {
        "id": "ecbd39a3.40f278",
        "type": "function",
        "z": "79da2ecb.7de1b",
        "name": "Get post URLs for page",
        "func": "let postUrls = []\nfor (let i = 0; i < msg.payload.length; i++) {   \n  let postUrl = msg.payload[i]._links.self[0].href     \n  postUrls.push(postUrl)\n  console.log(`==> ${postUrl}`)\n}\nmsg.payload = postUrls\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "9ec93f16.4b843"
            ]
        ]
    },
    {
        "id": "9ec93f16.4b843",
        "type": "split",
        "z": "79da2ecb.7de1b",
        "name": "Split on paginated URLs",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 410,
        "y": 300,
        "wires": [
            [
                "885543f4.baa37"
            ]
        ]
    },
    {
        "id": "885543f4.baa37",
        "type": "change",
        "z": "79da2ecb.7de1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 300,
        "wires": [
            [
                "48c8147.4761aec"
            ]
        ]
    },
    {
        "id": "2ffc6673.90278a",
        "type": "json",
        "z": "79da2ecb.7de1b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1070,
        "y": 300,
        "wires": [
            [
                "e6c1682a.4347c8"
            ]
        ]
    },
    {
        "id": "48c8147.4761aec",
        "type": "http request",
        "z": "79da2ecb.7de1b",
        "name": "Request next post page",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 850,
        "y": 300,
        "wires": [
            [
                "2ffc6673.90278a"
            ]
        ]
    },
    {
        "id": "24687e1f.622432",
        "type": "file in",
        "z": "79da2ecb.7de1b",
        "name": "read template",
        "filename": "/Users/gaston/headwire3/conferences/adobe-summit-2020/workspace/wp2aem/ui.content/src/main/content/jcr_root/conf/wp2aem/settings/wcm/templates/page-content/initial/.content.xml",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "b2fda289.2d59c"
            ]
        ]
    },
    {
        "id": "d2e58c58.27bfb",
        "type": "debug",
        "z": "79da2ecb.7de1b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 600,
        "wires": []
    },
    {
        "id": "b2fda289.2d59c",
        "type": "xml",
        "z": "79da2ecb.7de1b",
        "name": "xml to json",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 350,
        "y": 520,
        "wires": [
            [
                "f675ee68.6f31c"
            ]
        ]
    },
    {
        "id": "4a972c55.d3ce24",
        "type": "file",
        "z": "79da2ecb.7de1b",
        "name": ".content.xml",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 390,
        "y": 600,
        "wires": [
            [
                "d2e58c58.27bfb"
            ]
        ]
    },
    {
        "id": "88d070e1.ec33c",
        "type": "xml",
        "z": "79da2ecb.7de1b",
        "name": "json-to-xml",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 710,
        "y": 520,
        "wires": [
            [
                "85292fad.478a5"
            ]
        ]
    },
    {
        "id": "f675ee68.6f31c",
        "type": "function",
        "z": "79da2ecb.7de1b",
        "name": "enrich template",
        "func": "//msg.payload['jcr:root']['$']['jcr:primaryType'] = 'cq:Page'\n//msg.payload['jcr:root']['jcr:content'][0]['root'][0] = msg.components\n//delete msg.payload['jcr:root']['$']['allowedPaths']\n\nconsole.log(msg.components.length)\nfor (let i = 0; i < msg.components.length; i++) {\n  let nodeName = 'component_' + (i + 1)\n  msg.payload['jcr:root']['jcr:content'][0]['root'][0]['container'][0]['container'][0][nodeName] = {}\n  msg.payload['jcr:root']['jcr:content'][0]['root'][0]['container'][0]['container'][0][nodeName]['$'] = msg.components[i]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 520,
        "wires": [
            [
                "88d070e1.ec33c"
            ]
        ]
    },
    {
        "id": "43d1f47b.a4d93c",
        "type": "FirstNode",
        "z": "79da2ecb.7de1b",
        "name": "",
        "x": 480,
        "y": 400,
        "wires": [
            [
                "b18d8c08.a20c2"
            ]
        ]
    },
    {
        "id": "b18d8c08.a20c2",
        "type": "change",
        "z": "79da2ecb.7de1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "components",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 400,
        "wires": [
            [
                "24687e1f.622432"
            ]
        ]
    },
    {
        "id": "e6c1682a.4347c8",
        "type": "function",
        "z": "79da2ecb.7de1b",
        "name": "Define .content.xml filename and path",
        "func": "// TODO: Extract into configuration\nmsg.contentXmlPath = `ui.content/src/main/content/jcr_root/content/wp2aem/us/en/${msg.payload.slug}/.content.xml`\nconsole.log(msg.contentXmlPath)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 400,
        "wires": [
            [
                "43d1f47b.a4d93c"
            ]
        ]
    },
    {
        "id": "85292fad.478a5",
        "type": "change",
        "z": "79da2ecb.7de1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "contentXmlPath",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 600,
        "wires": [
            [
                "4a972c55.d3ce24"
            ]
        ]
    }
]