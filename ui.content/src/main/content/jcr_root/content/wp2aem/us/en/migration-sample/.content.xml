<?xml version="1.0" encoding="UTF-8" standalone="yes"?><jcr:root xmlns:sling="http://sling.apache.org/jcr/sling/1.0" xmlns:cq="http://www.day.com/jcr/cq/1.0" xmlns:jcr="http://www.jcp.org/jcr/1.0" xmlns:nt="http://www.jcp.org/jcr/nt/1.0" jcr:primaryType="cq:Page"><jcr:content cq:template="/conf/wp2aem/settings/wcm/templates/page-content" jcr:primaryType="cq:PageContent" sling:resourceType="wp2aem/components/page"><root jcr:primaryType="nt:unstructured" sling:resourceType="wp2aem/components/container"><container jcr:primaryType="nt:unstructured" sling:resourceType="wp2aem/components/container"><title jcr:primaryType="nt:unstructured" sling:resourceType="wp2aem/components/title"/><container jcr:primaryType="nt:unstructured" sling:resourceType="wp2aem/components/container" layout="responsiveGrid"><component_1 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/title/v2/title" jcr:title="Executive Summary" type="h2"/><component_2/><component_3 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>In January 2020, the Cortex XDR Managed Threat Hunting team, part of Unit 42,  identified a malicious Microsoft Word document, disguised as a password-protected NortonLifelock document, being used in a phishing campaign to deliver a commercially available remote access tool (RAT) called &lt;a href=&quot;https://www.netsupportmanager.com/index.asp&quot;>NetSupport Manager&lt;/a>. Using a fictitious NortonLifelock document to entice the user to enable macros makes this particular attack interesting to us.&lt;/p>&#xA;" textIsRich="true"/><component_4/><component_5 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>This RAT is typically used for legitimate purposes allowing administrators remote access to client computers. However, malicious operators are installing the RAT to victim’s systems allowing them to gain unauthorized access. The use of this NetSupport Manager RAT for unauthorized access has been observed in phishing campaigns since at least &lt;a href=&quot;https://www.fireeye.com/blog/threat-research/2018/04/fake-software-update-abuses-netsupport-remote-access-tool.html&quot;>2018&lt;/a>.&lt;/p>&#xA;" textIsRich="true"/><component_6/><component_7 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>During an initial review of the detection, which was flagged via Cortex XDR™, we observed that the causality chain began when a Microsoft Word document was opened from within Microsoft Office Outlook. While we do not have the actual email, we are able to conclude that this activity appears to be a part of a larger campaign.&lt;/p>&#xA;" textIsRich="true"/><component_8/><component_9 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>This activity employs evasion techniques to evade both dynamic and static analysis and utilizes the PowerShell PowerSploit framework to carry out the installation of the malicious file activity. Through additional analysis, we identified related activity dating back to early November of 2019.&lt;/p>&#xA;" textIsRich="true"/><component_10/><component_11 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>In this write-up, we will describe the anomalous activities as observed through Cortex XDR’s behavioral detection capabilities.&lt;/p>&#xA;" textIsRich="true"/><component_12/><component_13 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/title/v2/title" jcr:title="Delivery" type="h2"/><component_14/><component_15 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>In early January 2020, the Cortex XDR™ Engine detected a suspicious winword.exe process executing an obfuscated batch file. In Figure 1, you can see multiple points of detection beginning with the initiating Microsoft Word process and continuing with the creation and execution of a .bat file. In Figure 2, you can see a rollup of the Timeline view showing an alert for a known bad indicator, the behavioral process execution, and attempted connection activities. Figure 3 shows the initial alert detected based on these behavioral indicators.&lt;/p>&#xA;" textIsRich="true"/><component_16/><component_17/><component_18/><component_19 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p> &lt;/p>&#xA;" textIsRich="true"/><component_20/><component_21/><component_22/><component_23 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p> &lt;/p>&#xA;" textIsRich="true"/><component_24/><component_25/><component_26/><component_27 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p> &lt;/p>&#xA;" textIsRich="true"/><component_28/><component_29 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>Figure 4 below is a screenshot of the malicious document used, disguised as a password-protected NortonLifelock document which requests the user to enter a password to enable macros. The document used for this analysis is SHA256: E9440A5D2DFE2453AE5B69A9C096F8D4CF9E059D469C5DE67380D76E02DD6975&lt;/p>&#xA;" textIsRich="true"/><component_30/><component_31/><component_32/><component_33 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p> &lt;/p>&#xA;" textIsRich="true"/><component_34/><component_35 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>To the user, the document appears to contain personal information that requires a password to view. Once the document is opened and the user clicks “Enable Content”, the macro is executed and the user is presented with a password dialog box.&lt;/p>&#xA;" textIsRich="true"/><component_36/><component_37/><component_38/><component_39 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>We suspect this password is provided in the phishing email, as it accepts only the letters ‘c’ or ‘C’ as shown in the macro code below. The hash for this macro code is SHA256: 68ca2458e0db9739258ce9e22aadd2423002b2cc779033d78d6abec1db534ac2&lt;/p>&#xA;" textIsRich="true"/><component_40/><component_41 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>&lt;/p>&#xA;" textIsRich="true"/><component_42/><component_43 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>If the user enters an incorrect password, they are presented with an error message stating an incorrect key was entered followed by a “done” processing message. It should be noted that no malicious activity occurs until the correct key is entered.  &lt;/p>&#xA;" textIsRich="true"/><component_44/><component_45 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>Once the correct password is received, the macro continues code execution and builds the following command string:&lt;/p>&#xA;" textIsRich="true"/><component_46/><component_47 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>The macro obfuscates all strings using multiple labels on Visual Basic for Applications (VBA) forms, which contain two characters that are eventually linked together to construct the final command to download and execute the RAT on the victim.&lt;/p>&#xA;" textIsRich="true"/><component_48/><component_49 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>The command string is executed via the VBA shell function, which does the following:&lt;/p>&#xA;" textIsRich="true"/><component_50/><component_51/><component_52/><component_53 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>The batch script uses msiexec, which is a part of the Windows Installer service used to download and install a Microsoft Intermediate Language (MSIL) binary to the victim from the domain:&lt;/p>&#xA;" textIsRich="true"/><component_54/><component_55 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>quickwaysignstx[.]com/view.php&lt;/p>&#xA;" textIsRich="true"/><component_56/><component_57 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>The server that is serving view.php appears to be filtering on the user-agent string, as visiting the site with a browser displays a standard image for the webpage. Note this domain appears to be a legitimate domain, which has been compromised and is being used by these operators.&lt;/p>&#xA;" textIsRich="true"/><component_58/><component_59 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>&lt;/p>&#xA;" textIsRich="true"/><component_60/><component_61/><component_62 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>&lt;/p>&#xA;" textIsRich="true"/><component_63/><component_64 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>This version string appears to be random, as several other strings were noted during an analysis of related activities. The string is displayed when MSI is run. Once downloaded, the MSI will execute using the /q parameter to suppress any Windows dialogs from the user. A similar activity was reported in &lt;a href=&quot;https://www.zscaler.com/blogs/research/netsupport-rat-installed-fake-update-notices&quot;>November 2019&lt;/a>.&lt;/p>&#xA;" textIsRich="true"/><component_65/><component_66 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>The MSI installs a PowerShell script in the victim’s %temp% directory named REgistryMPZMZQYVXO.ps1.&lt;/p>&#xA;" textIsRich="true"/><component_67/><component_68/><component_69/><component_70 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>The encrypted blob of data stored in REgistryMPZMZQYVXO.ps1 is another PowerShell script that is responsible for installing the NetSupport Manager RAT onto the victim and setting up persistence.&lt;/p>&#xA;" textIsRich="true"/><component_71/><component_72 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>The PowerShell script appears to have been generated using the open-source script &lt;a href=&quot;https://github.com/PowerShellMafia/PowerSploit/blob/master/ScriptModification/Out-EncryptedScript.ps1&quot;>Out-EncryptedScript.ps1&lt;/a> from the &lt;a href=&quot;https://github.com/PowerShellMafia/PowerSploit&quot;>PowerSploit &lt;/a>framework. It contains a blob of data that is obfuscated via base64 and is TripleDES encrypted with a cipher mode of Cipher Block Chain (CBC).&lt;/p>&#xA;" textIsRich="true"/><component_73/><component_74 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>The decryption password and Initialization Vector (IV) for this particular sample is:&lt;/p>&#xA;" textIsRich="true"/><component_75/><component_76 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>Decryption key = 0xA7A15B277A74CD3233B9DF078ABCDE12&#xA;IV                        = DJZGVUGVHDMNIGZD&lt;/p>&#xA;" textIsRich="true"/><component_77/><component_78 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>It should be noted that the IV used in this sample would most likely be different from other samples generated by PowerSploit. Also, the 16 byte IV would be truncated to 8 bytes, as IV block sizes are 8 bytes in length. The decrypted PowerShell script looks like:&lt;/p>&#xA;" textIsRich="true"/><component_79/><component_80 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p> &lt;/p>&#xA;" textIsRich="true"/><component_81/><component_82/><component_83/><component_84/><component_85/><component_86/><component_87/><component_88/><component_89/><component_90/><component_91/><component_92/><component_93/><component_94/><component_95/><component_96/><component_97/><component_98/><component_99/><component_100/><component_101/><component_102/><component_103/><component_104/><component_105/><component_106 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>The RAT installer PowerShell script does the following:&lt;/p>&#xA;" textIsRich="true"/><component_107/><component_108 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>Once the main NetSupport Manager executable (presentationhost.exe) is started, it beacons to the domain geo.netsupportsoftware[.]com to retrieve geolocation of the host followed by an HTTP POST to http://94.158.245[.]182/fakeurl.htm&lt;/p>&#xA;" textIsRich="true"/><component_109/><component_110 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>It should be noted that the original name of NetSupport Manager is client32.exe and it was likely changed to presentationhost.exe to avoid any suspicions. Example of traffic sent to the target domain:&lt;/p>&#xA;" textIsRich="true"/><component_111/><component_112 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>POST http://94.158.245[.]182/fakeurl.htm HTTP/1.1&#xA;User-Agent: NetSupport Manager/1.3&#xA;Content-Type: application/x-www-form-urlencoded&#xA;Content-Length: 22&#xA;Host: 94.158.245[.]182&#xA;Connection: Keep-Alive&#xA;CMD=POLL&#xA;INFO=1&#xA;ACK=1&lt;/p>&#xA;" textIsRich="true"/><component_113/><component_114 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>HTTP/1.1 200 OK&#xA;Server: NetSupport Gateway/1.6 (Windows NT)&#xA;Content-Type: application/x-www-form-urlencoded&#xA;Content-Length: 60&#xA;Connection: Keep-Alive&lt;/p>&#xA;" textIsRich="true"/><component_115/><component_116 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>&lt;/p>&#xA;" textIsRich="true"/><component_117/><component_118 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>POST http://94.158.245[.]182/fakeurl.htm HTTP/1.1&#xA;User-Agent: NetSupport Manager/1.3&#xA;Content-Type: application/x-www-form-urlencoded&#xA;Content-Length: 244&#xA;Host: 94.158.245[.]182&#xA;Connection: Keep-Alive&lt;/p>&#xA;" textIsRich="true"/><component_119/><component_120 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p> &lt;/p>&#xA;" textIsRich="true"/><component_121/><component_122 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>CMD=ENCD&#xA;ES=1&#xA;DATA=u.2h.r..4.]..%y-…..=I…D3.W..i.7?….=@….F.f….&amp;t.[..6ra..L..`Tzg….. ..U.z4.]..%y-A9H=n .:!.”Pfd]U,[.(…f=I…..W.p..RHz…..#..@…..>|.?…R…s.nt.G..=}\……M…6…wC……..`.I=M..0i=@..o.ckp=@.r……..M.6..&lt;/p>&#xA;" textIsRich="true"/><component_123/><component_124 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/title/v2/title" jcr:title="Extended Campaign Details" type="h2"/><component_125/><component_126 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>While hunting for related activity on all XDR customers, we identified other files likely related to this campaign activity. This related activity ranges in date from the beginning of November 2019 through the end of January 2020.&lt;/p>&#xA;" textIsRich="true"/><component_127/><component_128 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>Throughout the first half of November, all related activities used email attachments containing the name of an individual publicly associated with the target company or utilizing the name of a public figure. Most public figures referenced belonged in the film or print industry. All emails were also sent using a random protonmail[.]com email address and contained email subjects related to refund status or unauthorized credit card transactions. Beginning at the end of November and continuing into January 2020, the mail attachments changed and were instead named as &lt;target company website>.doc and sent from email addresses using domains that were registered within one day of the observed activity. The email subjects contained the same trend reusing themes associated with refunds, as well as transaction and order inquiries. While it is unclear what the overall motivations of this activity is, these changes may increase the likelihood of a recipient opening the email attachment and indicate a desire to gain access to the target network.&lt;/p>&#xA;" textIsRich="true"/><component_129/><component_130 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>All associated indicators are referenced in the Appendix. While these indicators have been observed in malicious activity, some may also be used for benign activities as well.&lt;/p>&#xA;" textIsRich="true"/><component_131/><component_132 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/title/v2/title" jcr:title="Conclusion" type="h2"/><component_133/><component_134 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>Cortex XDR™ utilizes signatures built for low detection activity like this by looking for behavioral activity combinations that may evade static and dynamic analysis.&lt;/p>&#xA;" textIsRich="true"/><component_135/><component_136 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>Malicious use of the NetSupport Manager remote access tool has also been reported by both &lt;a href=&quot;https://www.fireeye.com/blog/threat-research/2018/04/fake-software-update-abuses-netsupport-remote-access-tool.html&quot;>FireEye &lt;/a>and &lt;a href=&quot;https://www.zscaler.com/blogs/research/netsupport-rat-installed-fake-update-notices&quot;>Zscaler &lt;/a>researchers. While this activity appears to be broad and at large scale, there are indications, such as the document name, that show the actor’s attempt to provide a stronger relationship to the target in an attempt to increase the success rate.&lt;/p>&#xA;" textIsRich="true"/><component_137/><component_138 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>Palo Alto Networks customers are protected from this threat via multiple services. Our threat prevention platform detects both the NetSupport Manager file along with the related payloads, including URL retrieval. Cortex XDR customers are further protected by behavioral indicator signatures. &lt;a href=&quot;https://www.paloaltonetworks.com/products/secure-the-network/subscriptions/autofocus&quot;>AutoFocus&lt;/a> users can track related activities using the &lt;a href=&quot;https://autofocus.paloaltonetworks.com/#/tag/Unit42.NetSupportManager&quot;>NetSupport Manager&lt;/a> tag.&lt;/p>&#xA;" textIsRich="true"/><component_139/><component_140 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>Palo Alto Networks has shared our findings, including file samples and indicators of compromise, in this report with our fellow Cyber Threat Alliance members. CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors. For more information on the Cyber Threat Alliance, visit &lt;a href=&quot;http://www.cyberthreatalliance.org/&quot;>www.cyberthreatalliance.org&lt;/a>. &lt;em>(This is added to blogs pre-shared with the CTA, when loaded into WordPress it will be added when appropriate).&lt;/em>&lt;/p>&#xA;" textIsRich="true"/><component_141/><component_142 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/title/v2/title" jcr:title="Indicators of Compromise" type="h3"/><component_143/><component_144 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p>Indicators associated with this analysis can be found on the Unit 42 GitHub IOCs page &lt;a href=&quot;https://github.com/pan-unit42/iocs/blob/master/NetSupportManager&quot;>here&lt;/a>.&lt;/p>&#xA;" textIsRich="true"/><component_145/><component_146 jcr:createdBy="admin" jcr:primaryType="nt:unstructured" sling:resourceType="core/wcm/components/text/v2/text" text="&lt;p> &lt;/p>&#xA;" textIsRich="true"/><component_147/></container></container></root></jcr:content></jcr:root>
